<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 引入我们的jdbc配置  因为web项目，编译后会到classes目录下。所以路径写法不同-->
	<properties resource="config/db.properties"/>
	<!-- 配置我们的扫描类和jdbc -->
	<typeAliases>
		<!-- 
			typeAlias
			定义单个pojo类别名。
			type:类的全路径名称
			alias:别名
		 -->
		<!--  <typeAlias type="com.qq986945193.ssmtools.pojo.MyBatisUser1" alias="user"/> -->
		<!-- 我们可以使用包扫描的方式批量定义别名
			定义后，别名等于类名，不区分大小写，但是我们还是建议按照java命名规则来。
			首字母小写，以后每个单词的首字母大写。
		 -->		
		<package name="com.qq986945193.ssmtools.pojo.MyBatisUser1"/>
	</typeAliases>
	<!-- 如果和spring框架整合后，environment配置将废除掉 -->
	<environments default="development">
		<environment id="development">
			<!-- 使用jdbc事务管理 -->
			<transactionManager type="JDBC"/>
			<!-- 数据库连接池的配置 -->
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}"/>
				<property name="url" value="${jdbc.url}"/>
				<property name="username" value="${jdbc.username}"/>
				<property name="password" value="${jdbc.password}"/>
		</dataSource>
		</environment>
	</environments>
	<!-- 引入我们的javabean的配置 因为web项目，编译后会到classes目录下。所以路径写法不同 -->
	<mappers>
		<mapper resource="config/MyBatisUser1.xml"/>
		<!-- 
			使用class属性引入接口的全路径名称
			使用规则：
				1，接口的名称和映射文件名称扩展名外要完全相同
				2，接口和映射文件要放在同一个目录下
				
		 -->
	<!-- 	 <mapper class=""/> -->
	<!-- 	<package name="com.qq986945193.ssmtools.mapper"/> -->
	</mappers>
	
</configuration>